#!/sbin/runscript

# backward compatibility for existing gentoo layout 
#
if [ -d "/var/lib/BitcoinSubsidium/.BitcoinSubsidium" ]; then
	BitcoinSubsidiumD_DEFAULT_DATADIR="/var/lib/BitcoinSubsidium/.BitcoinSubsidium"
else
	BitcoinSubsidiumD_DEFAULT_DATADIR="/var/lib/BitcoinSubsidiumd"
fi

BitcoinSubsidiumD_CONFIGFILE=${BitcoinSubsidiumD_CONFIGFILE:-/etc/BitcoinSubsidium/BitcoinSubsidium.conf}
BitcoinSubsidiumD_PIDDIR=${BitcoinSubsidiumD_PIDDIR:-/var/run/BitcoinSubsidiumd}
BitcoinSubsidiumD_PIDFILE=${BitcoinSubsidiumD_PIDFILE:-${BitcoinSubsidiumD_PIDDIR}/BitcoinSubsidiumd.pid}
BitcoinSubsidiumD_DATADIR=${BitcoinSubsidiumD_DATADIR:-${BitcoinSubsidiumD_DEFAULT_DATADIR}}
BitcoinSubsidiumD_USER=${BitcoinSubsidiumD_USER:-${BitcoinSubsidium_USER:-BitcoinSubsidium}}
BitcoinSubsidiumD_GROUP=${BitcoinSubsidiumD_GROUP:-BitcoinSubsidium}
BitcoinSubsidiumD_BIN=${BitcoinSubsidiumD_BIN:-/usr/bin/BitcoinSubsidiumd}
BitcoinSubsidiumD_NICE=${BitcoinSubsidiumD_NICE:-${NICELEVEL:-0}}
BitcoinSubsidiumD_OPTS="${BitcoinSubsidiumD_OPTS:-${BitcoinSubsidium_OPTS}}"

name="BitcoinSubsidium Core Daemon"
description="BitcoinSubsidium cryptocurrency P2P network daemon"

command="/usr/bin/BitcoinSubsidiumd"
command_args="-pid=\"${BitcoinSubsidiumD_PIDFILE}\" \
		-conf=\"${BitcoinSubsidiumD_CONFIGFILE}\" \
		-datadir=\"${BitcoinSubsidiumD_DATADIR}\" \
		-daemon \
		${BitcoinSubsidiumD_OPTS}"

required_files="${BitcoinSubsidiumD_CONFIGFILE}"
start_stop_daemon_args="-u ${BitcoinSubsidiumD_USER} \
			-N ${BitcoinSubsidiumD_NICE} -w 2000"
pidfile="${BitcoinSubsidiumD_PIDFILE}"

# The retry schedule to use when stopping the daemon. Could be either
# a timeout in seconds or multiple signal/timeout pairs (like
# "SIGKILL/180 SIGTERM/300")
retry="${BitcoinSubsidiumD_SIGTERM_TIMEOUT}"

depend() {
	need localmount net
}

# verify
# 1) that the datadir exists and is writable (or create it)
# 2) that a directory for the pid exists and is writable
# 3) ownership and permissions on the config file
start_pre() {
	checkpath \
	-d \
	--mode 0750 \
	--owner "${BitcoinSubsidiumD_USER}:${BitcoinSubsidiumD_GROUP}" \
	"${BitcoinSubsidiumD_DATADIR}"

	checkpath \
	-d \
	--mode 0755 \
	--owner "${BitcoinSubsidiumD_USER}:${BitcoinSubsidiumD_GROUP}" \
	"${BitcoinSubsidiumD_PIDDIR}"

	checkpath -f \
	-o ${BitcoinSubsidiumD_USER}:${BitcoinSubsidiumD_GROUP} \
	-m 0660 \
	${BitcoinSubsidiumD_CONFIGFILE}

	checkconfig || return 1
}

checkconfig()
{
	if ! grep -qs '^rpcpassword=' "${BitcoinSubsidiumD_CONFIGFILE}" ; then
		eerror ""
		eerror "ERROR: You must set a secure rpcpassword to run BitcoinSubsidiumd."
		eerror "The setting must appear in ${BitcoinSubsidiumD_CONFIGFILE}"
		eerror ""
		eerror "This password is security critical to securing wallets "
		eerror "and must not be the same as the rpcuser setting."
		eerror "You can generate a suitable random password using the following "
		eerror "command from the shell:"
		eerror ""
		eerror "bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'"
		eerror ""
		eerror "It is recommended that you also set alertnotify so you are "
		eerror "notified of problems:"
		eerror ""
		eerror "ie: alertnotify=echo %%s | mail -s \"BitcoinSubsidium Alert\"" \
			"admin@foo.com"
		eerror ""
		return 1
	fi
}
